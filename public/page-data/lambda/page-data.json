{"componentChunkName":"component---src-templates-operator-js","path":"/lambda/","result":{"data":{"markdownRemark":{"html":"<p>This operator can be used in two forms, as a lambda and as the seperator of a member name and the member implementation in an expression body definition.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// Lambda Use</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> languages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"c-charp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"javascript\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"java\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> cLanguages <span class=\"token operator\">=</span> languages<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>w <span class=\"token operator\">=></span> w<span class=\"token punctuation\">.</span><span class=\"token function\">StartsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>cLanguages<span class=\"token punctuation\">.</span><span class=\"token function\">Count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n<span class=\"token comment\">// Expression Body Use</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\"><span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> World!\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello World!</span></code></pre></div>","frontmatter":{"title":"Lambda","operator":"=>","repl":"https://repl.it/@imrandyk/Lambda","docs":"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/lambda-operator"}}},"pageContext":{"slug":"/lambda/"}},"staticQueryHashes":["1989779756","3649515864","63159454"]}