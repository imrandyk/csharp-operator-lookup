{"componentChunkName":"component---src-templates-operator-js","path":"/null-conditional/","result":{"data":{"markdownRemark":{"html":"<p>The <code class=\"language-text\">?.</code> operator acts the same as <code class=\"language-text\">.</code>, but if the left hand item is null then the result of the right hand is null also instead of throwing an error.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// Given a Person class of</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Person</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NullReferenceException</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">?.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Blank string</span>\nme <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Person</span> <span class=\"token punctuation\">{</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Randy\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">?.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Randy</span></code></pre></div>","frontmatter":{"title":"Null Conditional","operator":"?.","repl":"https://repl.it/@imrandyk/Null-Conditional","docs":"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/member-access-operators#null-conditional-operators--and-"}}},"pageContext":{"slug":"/null-conditional/"}},"staticQueryHashes":["1989779756","3649515864","63159454"]}