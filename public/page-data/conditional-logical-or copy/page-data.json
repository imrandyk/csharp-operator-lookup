{"componentChunkName":"component---src-templates-operator-js","path":"/conditional-logical-or copy/","result":{"data":{"markdownRemark":{"html":"<p>The <code class=\"language-text\">||</code> operator \"short-circuits\" the logical OR of its operands.</p>\n<p>The <code class=\"language-text\">||</code> operator evaluates the left hand operand and if its true stops the evaluation of the right hand operand. If the left is false then right hand is then evaluated</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">Right</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right operand is evaluated.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> a <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">||</span> <span class=\"token function\">Right</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output:</span>\n<span class=\"token comment\">// right operand is evaluated.</span>\n<span class=\"token comment\">// False</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> b <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">||</span> <span class=\"token function\">Right</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Output:</span>\n<span class=\"token comment\">// True</span></code></pre></div>","frontmatter":{"title":"Conditional Logical Or","operator":"||","repl":"https://repl.it/@imrandyk/ConditionalLogicalOr","docs":"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators#conditional-logical-and-operator-"}}},"pageContext":{"slug":"/conditional-logical-or copy/"}},"staticQueryHashes":["1989779756","3649515864","63159454"]}