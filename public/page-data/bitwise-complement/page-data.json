{"componentChunkName":"component---src-templates-operator-js","path":"/bitwise-complement/","result":{"data":{"markdownRemark":{"html":"<p>This operator takes the binary version of the operand and flips or negates each bit.</p>\n<p>So all <code class=\"language-text\">0</code> bits become a <code class=\"language-text\">1</code> and all <code class=\"language-text\">1</code> bits become a <code class=\"language-text\">0</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> five <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 32 bits wide</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span>five<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">toBase</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 101</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>five<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">toBase</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Flipped</span>\n<span class=\"token comment\">// 11111111111111111111111111111010</span>\n<span class=\"token comment\">// the reason for all the 1's is cause an</span>\n<span class=\"token comment\">// 5 has 29 bits in the front set to 0.</span></code></pre></div>","frontmatter":{"title":"Bitwise Complement","operator":"~","repl":"https://repl.it/@imrandyk/BitwiseComplement","docs":"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/bitwise-and-shift-operators#bitwise-complement-operator-"}}},"pageContext":{"slug":"/bitwise-complement/"}},"staticQueryHashes":["1989779756","3649515864","63159454"]}