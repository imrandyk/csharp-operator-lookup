{"componentChunkName":"component---src-templates-operator-js","path":"/logical-negation/","result":{"data":{"markdownRemark":{"html":"<p>This operator negates a operand, so a <code class=\"language-text\">true</code> becomes a <code class=\"language-text\">false</code> and a <code class=\"language-text\">false</code> becomes a <code class=\"language-text\">true</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// Mathmatical Use</span>\n<span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isTrue <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>isTrue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// True</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isTrue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// False</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isFalse <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>isFalse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// False</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isFalse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// True</span>\n\n<span class=\"token comment\">// Given a fucntion</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">returnOpposite</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>b<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// the ! can also be used on any funciton/expressions</span>\n<span class=\"token comment\">// that returns a bool</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">returnOpposite</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// True</span></code></pre></div>","frontmatter":{"title":"Logical negation","operator":"!","repl":"https://repl.it/@imrandyk/LogicalNegation","docs":"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators#logical-negation-operator-"}}},"pageContext":{"slug":"/logical-negation/"}},"staticQueryHashes":["1989779756","3649515864","63159454"]}